<?php    class Controller_Realms	{		function __construct()		{			if (!self::db_check())			{				return;			}						self::auth_check();						View::instance() -> set_tpl_dir('controllers\realms');						View::instance() -> msg_back_link = Config::instance() -> web['path'] . 'realms';						View::instance() -> title = 'realms';						View::instance() -> controller = 'realms';		}				public function action_index($controllerArguments) 		{			$view = View::instance();						if(!sizeof(Config::instance() -> realms))			{				header('Location: ' . Config::instance() -> web['path'] . 'realms/add');			}						foreach (Config::instance() -> realms as $key => $value)			{				$realms[$key]['title'] = Config::instance() -> realms[$key]['title'];				$realms[$key]['availability'] = Config::instance() -> realms[$key]['config_availability'];			}						$view -> realms_list = $realms;						$view -> display('index');			return;		}				public function action_edit($controllerArguments) 		{			$view = View::instance();						$view -> msg_back_link = Config::instance() -> web['path'] . 'realms/edit';						if (!$user_form['realm_id'] = Request::get('realm_id', Request::T_INTEGER))			{				$id = isset($controllerArguments['id']) ? (int)$controllerArguments['id'] : 0;									$view -> msg_back_link = Config::instance() -> web['path'] . 'realms';								if (!isset(Config::instance() -> realms[$id]))				{					$view -> send_response(View::RT_MSG, ERROR_REALM_EXIST);					return;				}								$realm_info = Config::instance() -> realms[$id];				$realm_info['id'] = $id;				unset($realm_info['2']);				unset($realm_info['3']);								$view -> realm_info = $realm_info;				$view -> token = Security::generate_token();				$view -> title = 'realms_edit';								$view -> display('edit');				return;			}						if (!Security::check_token(Request::get('token', Request::T_STRING)))			{				header('Location: ' . Config::instance() -> web['path'] . 'realms/edit/id=' . $user_form['realm_id']);			}						$view -> msg_back_link = Config::instance() -> web['path'] . 'realms/edit/id=' . $user_form['realm_id'];						if (!isset(Config::instance() -> realms[$user_form['realm_id']]))			{				$view -> send_response(View::RT_MSG, ERROR_REALM_EXIST);				return;			}						if ((!$user_form['title'] = htmlspecialchars(strip_tags((Request::get('title', Request::T_STRING))))) 				|| (mb_strlen($user_form['title']) < 3 || mb_strlen($user_form['title']) > 20))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_TITLE);				return;			}						$user_form['address'] = Request::get('address', Request::T_STRING);						if (!preg_match("#^[a-z\d_\.-]+\.[a-z]{2,6}$#i", $user_form['address'])				&& !filter_var($user_form['address'], FILTER_VALIDATE_IP))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_ADDRESS);				return;			}						if ((!$user_form['port'] = Request::get('port', Request::T_INTEGER)) || $user_form['port'] == 0)			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_PORT);				return;			}						if (((!$user_form['user'] = Request::get('user', Request::T_STRING)) 				|| (!preg_match('/^[a-zA-Z0-9_.]{3,32}$/', $user_form['user'])))				&& strlen($user_form['user']) > 0)			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_USER);				return;			}						if (((!$user_form['password'] = Request::get('password', Request::T_STRING)) 				|| (!preg_match('/^[a-zA-Z0-9_.]{3,32}$/', $user_form['password'])))				&& strlen($user_form['password']) > 0)			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_PASSWORD);				return;			}						if ((!$user_form['encoding'] = Request::get('encoding', Request::T_STRING)) 				|| (!preg_match('/^[a-zA-Z0-9_]{2,15}$/', $user_form['encoding'])))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_ENCODING);				return;			}						if ((!$user_form['db_name'] = Request::get('db_name', Request::T_STRING)) 				|| (!preg_match('/^[a-zA-Z0-9_]{2,32}$/', $user_form['db_name'])))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_NAME);				return;			}						if ((!$user_form['db_name'] = Request::get('db_name', Request::T_STRING)) 				|| (!preg_match('/^[a-zA-Z0-9_]{2,32}$/', $user_form['db_name'])))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_NAME);				return;			}						$user_form['availability'] = Request::get('availability', Request::T_INTEGER);						if ($user_form['availability'] != 1)			{				$user_form['availability'] = 0;			}						$model = new Model_Realms();						if (!$model -> change_info($user_form['realm_id'], $user_form))			{				$view -> send_response(View::RT_MSG, ERROR_REALM_CHANGE);				return;			}						$view -> msg_back_link = Config::instance() -> web['path'] . 'realms';						Logger::add('изменил информацию об игровом мире "' . $user_form['title'] . '" (#' . $user_form['realm_id'] . ')');						$view -> send_response(View::RT_MSG, 'edit_succes', 1);			return;		}				public function action_add($controllerArguments) 		{			$view = View::instance();						$view -> msg_back_link = Config::instance() -> web['path'] . 'realms/edit';						if (!Request::get('token', Request::T_STRING))			{				$view -> token = Security::generate_token();				$view -> title = 'realms_add';								$view -> display('add');				return;			}						if (!Security::check_token(Request::get('token', Request::T_STRING)))			{				header('Location: ' . Config::instance() -> web['path'] . 'realms/add');			}						$view -> msg_back_link = Config::instance() -> web['path'] . 'realms/add';						if ((!$user_form['title'] = htmlspecialchars(strip_tags((Request::get('title', Request::T_STRING))))) 				|| (mb_strlen($user_form['title'], 'UTF-8') < 3 || mb_strlen($user_form['title'], 'UTF-8') > 32))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_TITLE);				return;			}						$user_form['address'] = Request::get('address', Request::T_STRING);						if (!preg_match("#^[a-z\d_\.-]+\.[a-z]{2,6}$#i", $user_form['address'])				&& !filter_var($user_form['address'], FILTER_VALIDATE_IP))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_ADDRESS);				return;			}						if ((!$user_form['port'] = Request::get('port', Request::T_INTEGER)) || $user_form['port'] == 0)			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_PORT);				return;			}						if ((!$user_form['user'] = Request::get('user', Request::T_STRING)) 				|| (!preg_match('/^[a-zA-Z0-9_.]{3,32}$/', $user_form['user'])))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_USER);				return;			}						if ((!$user_form['password'] = Request::get('password', Request::T_STRING)) 				|| (!preg_match('/^[a-zA-Z0-9_.]{3,32}$/', $user_form['password'])))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_PASSWORD);				return;			}						if ((!$user_form['encoding'] = Request::get('encoding', Request::T_STRING)) 				|| (!preg_match('/^[a-zA-Z0-9_]{2,15}$/', $user_form['encoding'])))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_ENCODING);				return;			}						if ((!$user_form['db_name'] = Request::get('db_name', Request::T_STRING)) 				|| (!preg_match('/^[a-zA-Z0-9_]{2,32}$/', $user_form['db_name'])))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_NAME);				return;			}						if ((!$user_form['db_name'] = Request::get('db_name', Request::T_STRING)) 				|| (!preg_match('/^[a-zA-Z0-9_]{2,32}$/', $user_form['db_name'])))			{				$view -> send_response(View::RT_MSG, ERROR_VALIDATE_DB_NAME);				return;			}						$user_form['availability'] = Request::get('availability', Request::T_INTEGER);						if ($user_form['availability'] != 1)			{				$user_form['availability'] = 0;			}						$model = new Model_Realms();						$realm_id = $model -> add($user_form);						if (!$realm_id)			{				$view -> send_response(View::RT_MSG, ERROR_REALM_ADD);				return;			}						$view -> msg_back_link = Config::instance() -> web['path'] . 'realms';						Logger::add('добавил игровой мир "' . $user_form['title'] . '" (#' . $realm_id . ')');						$view -> send_response(View::RT_MSG, 'add_succes', 1);			return;		}				public function action_delete($controllerArguments) 		{			$view = View::instance();						$id = isset($controllerArguments['id']) ? (int)$controllerArguments['id'] : 0;						$model = new Model_Realms();						if (!$model -> delete($id))			{				$view -> send_response(View::RT_MSG, ERROR_REALM_DELETE);				return;			}						$view -> msg_back_link = Config::instance() -> web['path'] . 'realms';						Logger::add('удалил игровой мир "' . Config::instance() -> realms[$id]['title'] . '" (#' . $user_form['realm_id'] . ')');						$view -> send_response(View::RT_MSG, 'delete_succes', 1);			return;		}				private function auth_check() 		{			if (!Account::get_login_status())			{				header('Location: ' . Config::instance() -> web['path'] . 'login');			}						if (!Account::is_admin())			{				header('Location: ' . Config::instance() -> web['path'] . 'main');			}		}				private function db_check() 		{			if (!Registry::instance() -> db_availability)			{				//View::instance() -> display_msg(ERROR_DB_CONNECT_ERROR);				return false;			}						return true;		}    }